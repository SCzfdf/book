1. pom.xml文件中要添加插件
<build>
    <plugins>
        <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration><!-- 很重要,作用是在linux中自动转变为可执行文件,自带start,stop,restart -->
                <executable>true</executable>
            </configuration>
		</plugin>
    <plugins>
<build>

2. 执行init_project.sh
作用是根据项目名生成Linux Service的一些依赖
需要注意更改JAVA_HOME和BUILD_PATH (可以做一些优化,有一些还是写死了)

3. Jenkins设置
其余设置不说
直说代码拉下来后的shell脚本
# maven路径 Jenkins有时候会用不到全局的maven 可以通过linux来解决,这里直接用全路径
MAVEN_PATH=/usr/local/software/maven/apache-maven-3.6.0/bin/
# 项目路径 项目的部署路径 ${project}是Jenkins参数化构建的参数
PROJECT_PATH=/var/lib/jenkins/workspace/${project}/
# 项目部署路径
BUILD_PATH=/var/lib/jenkins/workspace/build/${project}/

# 切换到项目路径编译全项目
cd ${PROJECT_PATH}
${MAVEN_PATH}mvn clean compile

# 切换到子项目路径(模块化编程),编译打包
cd ${PROJECT_PATH}${project}
${MAVEN_PATH}mvn clean install

# 切换到编译文件夹,复制编译后的文件到部署目录
cd ${PROJECT_PATH}${project}/target 
cp hall-management-system-0.0.1-SNAPSHOT.jar ${BUILD_PATH}${project}.jar

# 运行
service ${project} restart
